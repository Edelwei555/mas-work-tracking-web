rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Функції для перевірки ролей
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isTeamMember(teamId, userId) {
      return isAuthenticated() && 
        exists(/databases/$(database)/documents/teams/$(teamId)/members/$(userId));
    }

    // Правила для користувачів
    match /users/{userId} {
      allow read, write: if isAuthenticated();
    }

    // Правила для команд
    match /teams/{teamId} {
      allow read, write: if isAuthenticated();
      
      // Правила для учасників команд
      match /members/{userId} {
        allow read, write: if isAuthenticated();
      }
    }

    // Правила для записів часу
    match /timeEntries/{entryId} {
      allow read, write: if isAuthenticated();
    }

    // Правила для типів робіт
    match /workTypes/{typeId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() && 
        request.resource.data.teamId != null && 
        request.resource.data.createdBy == request.auth.uid;
      allow update, delete: if isAuthenticated();
    }

    // Правила для локацій
    match /locations/{locationId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() && 
        request.resource.data.teamId != null && 
        request.resource.data.createdBy == request.auth.uid;
      allow update, delete: if isAuthenticated();
    }
  }
} 